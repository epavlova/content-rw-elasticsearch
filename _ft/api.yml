swagger: "2.0"

info:
  title: Content RW ElasticSearch
  description: UPP Content RW ElasticSearch for writing content with annotations to elasticsearch
  version: 0.0.1
  license:
    name: MIT
  contact:
    name: Universal Publishing
    email: universal.publishing@ft.com

host: api.ft.com
basePath: "/"
schemes:
  - http
  - https

paths:
  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: >
            Should always return 200 along with the output of the healthchecks - regardless
            of whether the healthchecks failed or not.
            Please inspect the overall ok property to see whether or not the application is healthy.
          examples:
            application/json:
              schemaVersion: 1
              systemCode: content-rw-elasticsearch
              name: app-name
              description: A descriptive description
              checks:
                - id: check-api-health
                  name: Check API Health
                  ok: false
                  severity: 1
                  businessImpact: A business impact this failure might have
                  technicalSummary: A technical description of what's gone wrong
                  panicGuide: https://runbooks.in.ft.com/content-rw-elasticsearch
                  checkOutput: Technical output from the check
                  lastUpdated: 2017-08-03T10:44:32.324709638+01:00
              ok: true
  /__health-details:
    get:
      summary: Summary of the health of the Elasticsearch cluster
      description: Returns the response from elasticsearch service /__health endpoint - describing the cluster health
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: >
            The details of the Elasticsearch cluster health.
          examples:
            application/json:
              cluster_name: 070529446553:upp-sapi-v1-k8s-dev
              status: green
              timed_out: false
              number_of_nodes: 7
              number_of_data_nodes: 4
              active_primary_shards: 0
              active_shards: 0
              relocating_shards: 0
              initializing_shards: 0
              unassigned_shards: 0
              number_of_pending_tasks: 0
  /__build-info:
    get:
      summary: Build Information
      description: >
        Returns application build info, such as the git repository and revision,
        the golang version it was built with, and the app release version.
      produces:
        - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: 0.0.1
              repository: https://github.com/Financial-Times/app-name.git
              revision: 7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd
              builder: go version go1.6.3 linux/amd64
              dateTime: "20161123122615"
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      tags:
        - Health
      produces:
          - text/plain; charset=US-ASCII
      responses:
        200:
          description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
          examples:
               text/plain; charset=US-ASCII: OK
        503:
          description: >
            One or more of the applications healthchecks have failed,
            so please do not use the app. See the /__health endpoint for more detailed information.
