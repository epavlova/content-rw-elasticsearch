version: 2.1

orbs:
  snyk: snyk/snyk@0.0.10

jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: golang:1
        environment:
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
    steps:
      - checkout
      - run:
          name: External dependencies
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            GO111MODULE=off go get -u github.com/mattn/goveralls
            GO111MODULE=off go get -u github.com/jstemmer/go-junit-report
            GO111MODULE=off go get -u github.com/myitcv/gobin
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.18.0
            wget https://raw.githubusercontent.com/Financial-Times/upp-coding-standard/v1.0.0/golangci-config/.golangci.yml
            STATIK_VERSION=$(go list -mod=readonly -m all | grep statik | cut -d ' ' -f2)
            gobin github.com/rakyll/statik@${STATIK_VERSION}
      - run:
          name: Make result folders
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Go build
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            go generate ./cmd/content-rw-elasticsearch
            go build -mod=readonly -v ./cmd/content-rw-elasticsearch
      - run:
          name: Run Linters
          command: golangci-lint run --config=.golangci.yml --new-from-rev=master
      - run:
          name: Run tests
          command: go test -race -mod=readonly -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Upload coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /content-rw-elasticsearch
    docker:
      - image: docker:18.03
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Dockerfile
          command: docker build --build-arg GITHUB_USERNAME="$GITHUB_USERNAME" --build-arg GITHUB_TOKEN="$GITHUB_TOKEN" .
  dredd:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          ELASTICSEARCH_SAPI_ENDPOINT: http://localhost:9000
          GITHUB_USERNAME: ${GITHUB_USERNAME}
          GITHUB_TOKEN: ${GITHUB_TOKEN}
      - image: peteclarkft/ersatz:stable
    steps:
      - checkout
      - run:
          name: Download dredd
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            curl -sL https://deb.nodesource.com/setup_11.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=11.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@11.2.19
            rm -rf /var/lib/apt/lists/*
            GO111MODULE=off go get -u github.com/myitcv/gobin
            STATIK_VERSION=$(go list -mod=readonly -m all | grep statik | cut -d ' ' -f2)
            gobin github.com/rakyll/statik@${STATIK_VERSION}
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Go Build
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            go generate ./cmd/content-rw-elasticsearch
            go build -mod=readonly -v ./cmd/content-rw-elasticsearch
      - run:
          name: Dredd API Testing
          command: dredd
  snykscan:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: circleci/golang:1
    steps:
      - checkout
      - run:
          name: Github private config
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
      - snyk/scan:
          monitor-on-build: false
          severity-threshold: medium
          fail-on-issues: true

workflows:
  test-and-build-docker:
    jobs:
      - build
      - dredd
      - dockerfile:
          requires:
            - build
  scanning:
    jobs:
      - build
      - snykscan:
          context: cm-team-snyk
          requires:
            - build
